/*
 * clock_manual.c
 *
 *  Created on: Nov 30, 2024
 *      Author: datph
 */
#include "clock_manual.h"

int modifyStatus = MODIFY_SECOND;

void clock_manual_run() {
	switch(modifyStatus) {
		case MODIFY_SECOND:
			if (isFlagModify() && toggle_flag == 1) {
				toggle_flag = 0;
				displayTime();
			}
			else if (isFlagModify() && toggle_flag == 0) {
				toggle_flag = 1;
				offSecond();
			}

			if (isButtonIncreasePressed()) {
				ds3231_sec++;
				checkTime();
			}
			break;
		case MODIFY_MINUTE:
			if (isFlagModify() && toggle_flag == 1) {
				toggle_flag = 0;
				displayTime();
			}
			else if (isFlagModify() && toggle_flag == 0) {
				toggle_flag = 1;
				offMinute();
			}

			if (isButtonIncreasePressed()) {
				ds3231_min++;
				checkTime();
			}
			break;
		case MODIFY_HOUR:
			if (isFlagModify() && toggle_flag == 1) {
				toggle_flag = 0;
				displayTime();
			}
			else if (isFlagModify() && toggle_flag == 0) {
				toggle_flag = 1;
				offHour();
			}

			if (isButtonIncreasePressed()) {
				ds3231_hours++;
				checkTime();
			}
			break;
		case MODIFY_ARTICLE:
			if (isFlagModify() && toggle_flag == 1) {
				toggle_flag = 0;
				displayTime();
			}
			else if (isFlagModify() && toggle_flag == 0) {
				toggle_flag = 1;
				offArticle();
			}

			if (isButtonIncreasePressed()) {
				ds3231_date++;
				checkTime();
			}
			break;
		case MODIFY_DAY:
			if (isFlagModify() && toggle_flag == 1) {
				toggle_flag = 0;
				displayTime();
			}
			else if (isFlagModify() && toggle_flag == 0) {
				toggle_flag = 1;
				offDay();
			}

			if (isButtonIncreasePressed()) {
				ds3231_day++;
				checkTime();
			}
			break;
		case MODIFY_MONTH:
			break;
		case MODIFY_YEAR:
			break;
		default:
			break;
	}
}
